import React from "react";
import { jsPDF } from "jspdf";

const EmployeePerformanceReport = () => {
  const handleDownloadPDF = () => {
    const doc = new jsPDF();

    // Add the report title and date
    doc.setFontSize(16);
    doc.text("Employee Performance Report", 20, 20);
    doc.setFontSize(12);
    doc.text("Employee Name: John Doe", 20, 30);
    doc.text("Report Date: November 20, 2024", 20, 40);
    doc.text("===================================================================", 20, 45);

    // Define column widths for proper alignment
    const columnWidths = [20, 40, 40, 40, 30]; // Adjust the widths for each column

    // Section: Performance Data (combined in a table)
    doc.setFontSize(14);
    doc.text("Employee Performance Data", 20, 55);
    doc.setFontSize(12);

    // Data headers
    doc.text("Week", 20, 65);
    doc.text("Tasks Completed", 20 + columnWidths[0], 65);
    doc.text("Deadlines Met", 20 + columnWidths[0] + columnWidths[1], 65);
    doc.text("Overdue Tasks", 20 + columnWidths[0] + columnWidths[1] + columnWidths[2], 65);
    doc.text("Avg Task Time (hrs)", 20 + columnWidths[0] + columnWidths[1] + columnWidths[2] + columnWidths[3], 65);

    // Data rows (Week 1 to Week 4)
    const performanceData = [
      ["Week 1", "10 tasks", "8 deadlines", "5 overdue tasks", "6 hours"],
      ["Week 2", "20 tasks", "15 deadlines", "3 overdue tasks", "5.5 hours"],
      ["Week 3", "35 tasks", "28 deadlines", "2 overdue tasks", "5 hours"],
      ["Week 4", "45 tasks", "40 deadlines", "1 overdue task", "4.8 hours"],
    ];

    let y = 75; // Initialize y-position for the rows

    // Loop through the data and print each row
    performanceData.forEach((row) => {
      doc.text(row[0], 20, y); // Week
      doc.text(row[1], 20 + columnWidths[0], y); // Tasks Completed
      doc.text(row[2], 20 + columnWidths[0] + columnWidths[1], y); // Deadlines Met
      doc.text(row[3], 20 + columnWidths[0] + columnWidths[1] + columnWidths[2], y); // Overdue Tasks
      doc.text(row[4], 20 + columnWidths[0] + columnWidths[1] + columnWidths[2] + columnWidths[3], y); // Avg Task Time
      y += 10; // Move to the next row
    });

    // Section: Summary
    y += 10; // Add spacing before the summary
    doc.setFontSize(14);
    doc.text("Performance Overview", 20, y);
    doc.setFontSize(12);
    doc.text("- Consistent improvement in task completion.", 20, y + 10);
    doc.text("- Deadlines met have increased significantly, with minimal overdue tasks.", 20, y + 20);
    doc.text("- Average task time has decreased, indicating more efficiency.", 20, y + 30);

    // Section: Recommendations for Improvement
    y += 40; // Add spacing before recommendations
    doc.setFontSize(14);
    doc.text("Recommendations for Improvement", 20, y);
    doc.setFontSize(12);
    doc.text("1. Continue working on maintaining the pace of completing tasks.", 20, y + 10);
    doc.text("2. Increase the complexity of tasks to challenge and further develop skills.", 20, y + 20);
    doc.text("3. Further reduce the average task time for even more efficiency.", 20, y + 30);

    // Footer
    y += 40; // Add spacing before footer
    doc.setFontSize(12);
    doc.text("Report Generated by: Employee Performance Analytics System", 20, y);

    // Save the PDF
    doc.save("Employee_Performance_Report.pdf");
  };

  return (
    <div className="p-5">
      <h2 className="text-xl font-bold mb-4">Employee Performance Report</h2>
      <p>Click the button below to download the employee performance report as a PDF:</p>
      <button
        onClick={handleDownloadPDF}
        className="mt-4 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600"
      >
        Download PDF
      </button>
    </div>
  );
};

export default EmployeePerformanceReport;
